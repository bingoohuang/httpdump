---

# Level  string `val:"all" usage:"Output level, url: only url, header: http headers, all: headers and text http body"`
level: all
#  Input  string `flag:"i" val:"any" usage:"Interface name or pcap file. If not set, If is any, capture all interface traffics"`
input: any
#
#   Ip   string `usage:"Filter by ip, if either src or dst ip is matched, the packet will be processed"`
ip: ""
#   Port uint   `usage:"Filter by port, if either source or target port is matched, the packet will be processed"`
port: 5003
#   Bpf  string `usage:"Customized bpf, if it is set, -ip -port will be suppressed"`
bpf: ""
#
#   Chan    uint `val:"10240" usage:"Channel size to buffer tcp packets"`
chan: 10240
#   OutChan uint `val:"40960" usage:"Output channel size to buffer tcp packets"`
outchan: 40960
#
#   Host    string `usage:"Filter by request host, using wildcard match(*, ?)"`
#   Uri     string `usage:"Filter by request url path, using wildcard match(*, ?)"`
#   Method  string `usage:"Filter by request method, multiple by comma"`
#   Verbose string `usage:"Verbose flag, available req/rsp/all for http replay dump"`
#
# Status util.IntSetFlag `usage:"Filter by response status code. Can use range. eg: 200, 200-300 or 200:300-400"`
#
#   Resp    bool `usage:"Print response or not"`
#   Force   bool `usage:"Force print unknown content-type http body even if it seems not to be text content"`
#   Curl    bool `usage:"Output an equivalent curl command for each http request"`
#   Version bool `flag:"v" usage:"Print version info and exit"`
#
#   DumpBody string   `usage:"Prefix file of dump http request/response body, empty for no dump, like solr, solr:10 (max 10)"`
#   Mode     string   `val:"fast" usage:"std/fast/pair"`
#   Output   []string `usage:"File output, like dump-yyyy-MM-dd-HH-mm.http, suffix like :32m for max size, suffix :append for append mode\n Or Relay http address, eg http://127.0.0.1:5002"`
output:
  - stdout
#  - log-yyyy-MM-dd.log:100M
#  - "http://192.168.126.18:5003"

#   Idle time.Duration `val:"4m" usage:"Idle time to remove connection if no package received"`
#
#   dumpMax uint32

#https://github.com/influxdata/telegraf/blob/master/plugins/inputs/tail/tail.go
## File names or a pattern to tail.
## These accept standard unix glob matching rules, but with the addition of
## ** as a "super asterisk". ie:
##   "/var/log/**.log"  -> recursively find all .log files in /var/log
##   "/var/log/*/*.log" -> find all .log files with a parent dir in /var/log
##   "/var/log/apache.log" -> just tail the apache log file
##   "/var/log/log[!1-2]*  -> tail files without 1-2
##   "/var/log/log[^1-2]*  -> identical behavior as above
#  File string `flag:"f" usage:"File of http request to parse, glob pattern like data/*.gor, or path like data/, suffix :tail to tail files, suffix :poll to set the tail watch method to poll"`

#  Pprof string `usage:"pprof address to listen on, not activate pprof if empty, eg. :6060"`
